{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uknord5he\\\\BH3\\\\dev\\\\diplomas\\\\frontend\\\\src\\\\hooks\\\\useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STORAGE_KEY = 'auth/state/v1';\nfunction useAuthState() {\n  _s();\n  const [user, setUser] = useState(() => {\n    try {\n      return JSON.parse(localStorage.getItem(STORAGE_KEY) || 'null');\n    } catch {\n      return null;\n    }\n  });\n  const persist = u => {\n    setUser(u);\n    try {\n      if (u) localStorage.setItem(STORAGE_KEY, JSON.stringify(u));else localStorage.removeItem(STORAGE_KEY);\n    } catch {}\n  };\n  const isAuthed = !!user;\n  const isAdmin = !!(user !== null && user !== void 0 && user.isAdmin);\n\n  /** Валидируем сессию. 404/405 НЕ обнуляют локальный стейт; 401/403 — обнуляют. */\n  const refresh = useCallback(async () => {\n    const candidates = ['/auth/me', '/admin/me', '/me'];\n    for (const ep of candidates) {\n      try {\n        var _data$user;\n        const {\n          data\n        } = await api.get(ep);\n        const u = {\n          email: (data === null || data === void 0 ? void 0 : data.email) || (user === null || user === void 0 ? void 0 : user.email) || null,\n          isAdmin: !!(data !== null && data !== void 0 && data.isAdmin || (data === null || data === void 0 ? void 0 : data.role) === 'admin' || (data === null || data === void 0 ? void 0 : (_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.role) === 'admin' || user !== null && user !== void 0 && user.isAdmin)\n        };\n        persist(u);\n        return;\n      } catch (e) {\n        var _e$response;\n        const st = e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.status;\n        if (st === 401 || st === 403) {\n          persist(null);\n          return;\n        }\n        if (st !== 404 && st !== 405) {\n          /* другая фатальная ошибка */return;\n        }\n        // 404/405 — просто пробуем следующий эндпоинт\n      }\n    }\n    // если ни один не нашёлся — оставляем локальный state как есть\n  }, [user === null || user === void 0 ? void 0 : user.email, user === null || user === void 0 ? void 0 : user.isAdmin]);\n  useEffect(() => {\n    refresh();\n  }, [refresh]);\n\n  /** Нормальный логин: по списку известных путей; без «любой пароль». */\n  const login = async ({\n    email,\n    password\n  }) => {\n    const body = {\n      email,\n      password\n    };\n    const endpoints = ['/auth/login', '/admin/login', '/login'];\n    let saw404 = false;\n    for (const ep of endpoints) {\n      try {\n        var _data$user2;\n        const {\n          data\n        } = await api.post(ep, body);\n        // если логин прошёл — сразу ставим пользователя,\n        // не полагаясь на /auth/me (которого может не быть)\n        const inferredAdmin = !!(data !== null && data !== void 0 && data.isAdmin || (data === null || data === void 0 ? void 0 : data.role) === 'admin' || (data === null || data === void 0 ? void 0 : (_data$user2 = data.user) === null || _data$user2 === void 0 ? void 0 : _data$user2.role) === 'admin' || ep.includes('/admin/'));\n        persist({\n          email,\n          isAdmin: inferredAdmin\n        });\n        return;\n      } catch (e) {\n        var _e$response2, _e$response4, _e$response4$data;\n        const st = e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.status;\n        if (st === 401 || st === 403) {\n          var _e$response3, _e$response3$data;\n          throw new Error((e === null || e === void 0 ? void 0 : (_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.message) || 'Невірний логін або пароль');\n        }\n        if (st === 404 || st === 405) {\n          saw404 = true;\n          continue;\n        }\n        throw new Error((e === null || e === void 0 ? void 0 : (_e$response4 = e.response) === null || _e$response4 === void 0 ? void 0 : (_e$response4$data = _e$response4.data) === null || _e$response4$data === void 0 ? void 0 : _e$response4$data.message) || 'Помилка авторизації');\n      }\n    }\n    if (saw404) throw new Error('Не знайдено маршрут авторизації');\n    throw new Error('Помилка авторизації');\n  };\n  const logout = async () => {\n    const endpoints = ['/auth/logout', '/admin/logout', '/logout'];\n    for (const ep of endpoints) {\n      try {\n        await api.post(ep);\n        break;\n      } catch (e) {\n        var _e$response5;\n        const st = e === null || e === void 0 ? void 0 : (_e$response5 = e.response) === null || _e$response5 === void 0 ? void 0 : _e$response5.status;\n        if (st !== 404 && st !== 405) break;\n      }\n    }\n    persist(null);\n  };\n  return {\n    user,\n    isAuthed,\n    isAdmin,\n    refresh,\n    login,\n    logout\n  };\n}\n\n/* === Контекст/провайдер/хук === */\n_s(useAuthState, \"tN4KI9ftSx1/21Kn+nHPQev9Kxk=\");\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  isAuthed: false,\n  isAdmin: false,\n  refresh: async () => {},\n  login: async () => {},\n  logout: async () => {}\n});\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const auth = useAuthState();\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 12\n  }, this);\n}\n_s2(AuthProvider, \"v5+xnRzRGgUkz6HrltagqFou1eE=\", false, function () {\n  return [useAuthState];\n});\n_c = AuthProvider;\nexport function useAuth() {\n  _s3();\n  return useContext(AuthContext);\n}\n_s3(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default useAuth;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useCallback","useContext","useEffect","useState","api","jsxDEV","_jsxDEV","STORAGE_KEY","useAuthState","_s","user","setUser","JSON","parse","localStorage","getItem","persist","u","setItem","stringify","removeItem","isAuthed","isAdmin","refresh","candidates","ep","_data$user","data","get","email","role","e","_e$response","st","response","status","login","password","body","endpoints","saw404","_data$user2","post","inferredAdmin","includes","_e$response2","_e$response4","_e$response4$data","_e$response3","_e$response3$data","Error","message","logout","_e$response5","AuthContext","AuthProvider","children","_s2","auth","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s3","$RefreshReg$"],"sources":["D:/Uknord5he/BH3/dev/diplomas/frontend/src/hooks/useAuth.js"],"sourcesContent":["import React, {\r\n    createContext,\r\n    useCallback,\r\n    useContext,\r\n    useEffect,\r\n    useState,\r\n} from 'react';\r\nimport api from '../services/api';\r\n\r\nconst STORAGE_KEY = 'auth/state/v1';\r\n\r\nfunction useAuthState() {\r\n    const [user, setUser] = useState(() => {\r\n        try { return JSON.parse(localStorage.getItem(STORAGE_KEY) || 'null'); }\r\n        catch { return null; }\r\n    });\r\n\r\n    const persist = (u) => {\r\n        setUser(u);\r\n        try {\r\n            if (u) localStorage.setItem(STORAGE_KEY, JSON.stringify(u));\r\n            else localStorage.removeItem(STORAGE_KEY);\r\n        } catch {}\r\n    };\r\n\r\n    const isAuthed = !!user;\r\n    const isAdmin  = !!user?.isAdmin;\r\n\r\n    /** Валидируем сессию. 404/405 НЕ обнуляют локальный стейт; 401/403 — обнуляют. */\r\n    const refresh = useCallback(async () => {\r\n        const candidates = ['/auth/me', '/admin/me', '/me'];\r\n        for (const ep of candidates) {\r\n            try {\r\n                const { data } = await api.get(ep);\r\n                const u = {\r\n                    email: data?.email || user?.email || null,\r\n                    isAdmin: !!(data?.isAdmin || data?.role === 'admin' || data?.user?.role === 'admin' || user?.isAdmin),\r\n                };\r\n                persist(u);\r\n                return;\r\n            } catch (e) {\r\n                const st = e?.response?.status;\r\n                if (st === 401 || st === 403) { persist(null); return; }\r\n                if (st !== 404 && st !== 405) { /* другая фатальная ошибка */ return; }\r\n                // 404/405 — просто пробуем следующий эндпоинт\r\n            }\r\n        }\r\n        // если ни один не нашёлся — оставляем локальный state как есть\r\n    }, [user?.email, user?.isAdmin]);\r\n\r\n    useEffect(() => { refresh(); }, [refresh]);\r\n\r\n    /** Нормальный логин: по списку известных путей; без «любой пароль». */\r\n    const login = async ({ email, password }) => {\r\n        const body = { email, password };\r\n        const endpoints = ['/auth/login', '/admin/login', '/login'];\r\n\r\n        let saw404 = false;\r\n\r\n        for (const ep of endpoints) {\r\n            try {\r\n                const { data } = await api.post(ep, body);\r\n                // если логин прошёл — сразу ставим пользователя,\r\n                // не полагаясь на /auth/me (которого может не быть)\r\n                const inferredAdmin =\r\n                    !!(data?.isAdmin || data?.role === 'admin' || data?.user?.role === 'admin' || ep.includes('/admin/'));\r\n                persist({ email, isAdmin: inferredAdmin });\r\n                return;\r\n            } catch (e) {\r\n                const st = e?.response?.status;\r\n                if (st === 401 || st === 403) {\r\n                    throw new Error(e?.response?.data?.message || 'Невірний логін або пароль');\r\n                }\r\n                if (st === 404 || st === 405) { saw404 = true; continue; }\r\n                throw new Error(e?.response?.data?.message || 'Помилка авторизації');\r\n            }\r\n        }\r\n\r\n        if (saw404) throw new Error('Не знайдено маршрут авторизації');\r\n        throw new Error('Помилка авторизації');\r\n    };\r\n\r\n    const logout = async () => {\r\n        const endpoints = ['/auth/logout', '/admin/logout', '/logout'];\r\n        for (const ep of endpoints) {\r\n            try { await api.post(ep); break; }\r\n            catch (e) {\r\n                const st = e?.response?.status;\r\n                if (st !== 404 && st !== 405) break;\r\n            }\r\n        }\r\n        persist(null);\r\n    };\r\n\r\n    return { user, isAuthed, isAdmin, refresh, login, logout };\r\n}\r\n\r\n/* === Контекст/провайдер/хук === */\r\nconst AuthContext = createContext({\r\n    user: null,\r\n    isAuthed: false,\r\n    isAdmin: false,\r\n    refresh: async () => {},\r\n    login: async () => {},\r\n    logout: async () => {},\r\n});\r\n\r\nexport function AuthProvider({ children }) {\r\n    const auth = useAuthState();\r\n    return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\r\n}\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport default useAuth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}