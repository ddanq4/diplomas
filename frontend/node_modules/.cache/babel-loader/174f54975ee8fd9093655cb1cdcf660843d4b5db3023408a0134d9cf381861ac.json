{"ast":null,"code":"// frontend/src/services/diplomaService.js\nimport api, { apiUrl } from './api';\n\n// ------------ helpers ------------\nasync function fetchJson(url, opts = {}) {\n  const res = await fetch(url, {\n    credentials: 'include',\n    ...opts\n  });\n  if (!res.ok) {\n    var _err;\n    let err;\n    try {\n      err = await res.json();\n    } catch {\n      err = {\n        message: res.statusText\n      };\n    }\n    const e = new Error(((_err = err) === null || _err === void 0 ? void 0 : _err.message) || res.statusText);\n    e.status = res.status;\n    e.payload = err;\n    throw e;\n  }\n  return res.json();\n}\n\n// ------------ filters / list / details ------------\nexport async function getFilters() {\n  const {\n    data\n  } = await api.get('/diplomas/filters'); // axios для обычных GET\n  return data;\n}\nexport async function getDiplomas(params = {}) {\n  const {\n    data\n  } = await api.get('/diplomas', {\n    params\n  });\n  return data; // { rows, total, page, limit }\n}\nexport async function getDiploma(id) {\n  const {\n    data\n  } = await api.get(`/diplomas/${id}`);\n  return data;\n}\n\n// ------------ create / update with FormData (fetch) ------------\nexport async function createDiploma(formData /* FormData */, _progressCb) {\n  // НИЧЕГО не ставим в headers — пусть браузер сам проставит multipart boundary\n  return fetchJson(`${apiUrl}/diplomas`, {\n    method: 'POST',\n    body: formData\n  });\n}\nexport async function updateDiploma(id, formData /* FormData */, _progressCb) {\n  return fetchJson(`${apiUrl}/diplomas/${id}`, {\n    method: 'PATCH',\n    body: formData\n  });\n}\n\n// ------------ admin ops ------------\nexport async function deleteDiploma(id) {\n  const {\n    data\n  } = await api.delete(`/diplomas/${id}`);\n  return data;\n}\nexport async function verifyDiploma(id, value = true) {\n  const {\n    data\n  } = await api.patch(`/diplomas/${id}`, {\n    isVerified: !!value\n  });\n  return data;\n}\nexport async function unverifyDiploma(id) {\n  return verifyDiploma(id, false);\n}","map":{"version":3,"names":["api","apiUrl","fetchJson","url","opts","res","fetch","credentials","ok","_err","err","json","message","statusText","e","Error","status","payload","getFilters","data","get","getDiplomas","params","getDiploma","id","createDiploma","formData","_progressCb","method","body","updateDiploma","deleteDiploma","delete","verifyDiploma","value","patch","isVerified","unverifyDiploma"],"sources":["D:/Uknord5he/BH3/dev/diplomas/frontend/src/services/diplomaService.js"],"sourcesContent":["// frontend/src/services/diplomaService.js\r\nimport api, { apiUrl } from './api';\r\n\r\n// ------------ helpers ------------\r\nasync function fetchJson(url, opts = {}) {\r\n    const res = await fetch(url, { credentials: 'include', ...opts });\r\n    if (!res.ok) {\r\n        let err;\r\n        try { err = await res.json(); } catch { err = { message: res.statusText }; }\r\n        const e = new Error(err?.message || res.statusText);\r\n        e.status = res.status; e.payload = err;\r\n        throw e;\r\n    }\r\n    return res.json();\r\n}\r\n\r\n// ------------ filters / list / details ------------\r\nexport async function getFilters() {\r\n    const { data } = await api.get('/diplomas/filters');   // axios для обычных GET\r\n    return data;\r\n}\r\n\r\nexport async function getDiplomas(params = {}) {\r\n    const { data } = await api.get('/diplomas', { params });\r\n    return data; // { rows, total, page, limit }\r\n}\r\n\r\nexport async function getDiploma(id) {\r\n    const { data } = await api.get(`/diplomas/${id}`);\r\n    return data;\r\n}\r\n\r\n// ------------ create / update with FormData (fetch) ------------\r\nexport async function createDiploma(formData /* FormData */, _progressCb) {\r\n    // НИЧЕГО не ставим в headers — пусть браузер сам проставит multipart boundary\r\n    return fetchJson(`${apiUrl}/diplomas`, { method: 'POST', body: formData });\r\n}\r\n\r\nexport async function updateDiploma(id, formData /* FormData */, _progressCb) {\r\n    return fetchJson(`${apiUrl}/diplomas/${id}`, { method: 'PATCH', body: formData });\r\n}\r\n\r\n// ------------ admin ops ------------\r\nexport async function deleteDiploma(id) {\r\n    const { data } = await api.delete(`/diplomas/${id}`);\r\n    return data;\r\n}\r\n\r\nexport async function verifyDiploma(id, value = true) {\r\n    const { data } = await api.patch(`/diplomas/${id}`, { isVerified: !!value });\r\n    return data;\r\n}\r\nexport async function unverifyDiploma(id) { return verifyDiploma(id, false); }\r\n"],"mappings":"AAAA;AACA,OAAOA,GAAG,IAAIC,MAAM,QAAQ,OAAO;;AAEnC;AACA,eAAeC,SAASA,CAACC,GAAG,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EACrC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;IAAEI,WAAW,EAAE,SAAS;IAAE,GAAGH;EAAK,CAAC,CAAC;EACjE,IAAI,CAACC,GAAG,CAACG,EAAE,EAAE;IAAA,IAAAC,IAAA;IACT,IAAIC,GAAG;IACP,IAAI;MAAEA,GAAG,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;IAAE,CAAC,CAAC,MAAM;MAAED,GAAG,GAAG;QAAEE,OAAO,EAAEP,GAAG,CAACQ;MAAW,CAAC;IAAE;IAC3E,MAAMC,CAAC,GAAG,IAAIC,KAAK,CAAC,EAAAN,IAAA,GAAAC,GAAG,cAAAD,IAAA,uBAAHA,IAAA,CAAKG,OAAO,KAAIP,GAAG,CAACQ,UAAU,CAAC;IACnDC,CAAC,CAACE,MAAM,GAAGX,GAAG,CAACW,MAAM;IAAEF,CAAC,CAACG,OAAO,GAAGP,GAAG;IACtC,MAAMI,CAAC;EACX;EACA,OAAOT,GAAG,CAACM,IAAI,CAAC,CAAC;AACrB;;AAEA;AACA,OAAO,eAAeO,UAAUA,CAAA,EAAG;EAC/B,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMnB,GAAG,CAACoB,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAG;EACvD,OAAOD,IAAI;AACf;AAEA,OAAO,eAAeE,WAAWA,CAACC,MAAM,GAAG,CAAC,CAAC,EAAE;EAC3C,MAAM;IAAEH;EAAK,CAAC,GAAG,MAAMnB,GAAG,CAACoB,GAAG,CAAC,WAAW,EAAE;IAAEE;EAAO,CAAC,CAAC;EACvD,OAAOH,IAAI,CAAC,CAAC;AACjB;AAEA,OAAO,eAAeI,UAAUA,CAACC,EAAE,EAAE;EACjC,MAAM;IAAEL;EAAK,CAAC,GAAG,MAAMnB,GAAG,CAACoB,GAAG,CAAC,aAAaI,EAAE,EAAE,CAAC;EACjD,OAAOL,IAAI;AACf;;AAEA;AACA,OAAO,eAAeM,aAAaA,CAACC,QAAQ,CAAC,gBAAgBC,WAAW,EAAE;EACtE;EACA,OAAOzB,SAAS,CAAC,GAAGD,MAAM,WAAW,EAAE;IAAE2B,MAAM,EAAE,MAAM;IAAEC,IAAI,EAAEH;EAAS,CAAC,CAAC;AAC9E;AAEA,OAAO,eAAeI,aAAaA,CAACN,EAAE,EAAEE,QAAQ,CAAC,gBAAgBC,WAAW,EAAE;EAC1E,OAAOzB,SAAS,CAAC,GAAGD,MAAM,aAAauB,EAAE,EAAE,EAAE;IAAEI,MAAM,EAAE,OAAO;IAAEC,IAAI,EAAEH;EAAS,CAAC,CAAC;AACrF;;AAEA;AACA,OAAO,eAAeK,aAAaA,CAACP,EAAE,EAAE;EACpC,MAAM;IAAEL;EAAK,CAAC,GAAG,MAAMnB,GAAG,CAACgC,MAAM,CAAC,aAAaR,EAAE,EAAE,CAAC;EACpD,OAAOL,IAAI;AACf;AAEA,OAAO,eAAec,aAAaA,CAACT,EAAE,EAAEU,KAAK,GAAG,IAAI,EAAE;EAClD,MAAM;IAAEf;EAAK,CAAC,GAAG,MAAMnB,GAAG,CAACmC,KAAK,CAAC,aAAaX,EAAE,EAAE,EAAE;IAAEY,UAAU,EAAE,CAAC,CAACF;EAAM,CAAC,CAAC;EAC5E,OAAOf,IAAI;AACf;AACA,OAAO,eAAekB,eAAeA,CAACb,EAAE,EAAE;EAAE,OAAOS,aAAa,CAACT,EAAE,EAAE,KAAK,CAAC;AAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}