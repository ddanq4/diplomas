{"ast":null,"code":"import axios from 'axios';\nconst apiBase = (process.env.REACT_APP_API_URL || 'http://localhost:5000').replace(/\\/+$/, '');\nfunction withApiSuffix(base) {\n  return `${base}/api`;\n}\nconst api = axios.create({\n  baseURL: withApiSuffix(apiBase)\n});\napi.interceptors.request.use(cfg => {\n  const t = localStorage.getItem('token');\n  if (t) cfg.headers.Authorization = `Bearer ${t}`;\n  return cfg;\n});\n\n// Совместимость: и default, и именованный экспорт (чтобы не трогать импорты в других файлах)\nexport default api;\nexport { api };","map":{"version":3,"names":["axios","apiBase","process","env","REACT_APP_API_URL","replace","withApiSuffix","base","api","create","baseURL","interceptors","request","use","cfg","t","localStorage","getItem","headers","Authorization"],"sources":["D:/Uknord5he/BH3/dev/diplomas/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst apiBase = (process.env.REACT_APP_API_URL || 'http://localhost:5000').replace(/\\/+$/, '');\r\n\r\nfunction withApiSuffix(base) {\r\n    return `${base}/api`;\r\n}\r\n\r\nconst api = axios.create({\r\n    baseURL: withApiSuffix(apiBase),\r\n});\r\n\r\napi.interceptors.request.use((cfg) => {\r\n    const t = localStorage.getItem('token');\r\n    if (t) cfg.headers.Authorization = `Bearer ${t}`;\r\n    return cfg;\r\n});\r\n\r\n// Совместимость: и default, и именованный экспорт (чтобы не трогать импорты в других файлах)\r\nexport default api;\r\nexport { api };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,CAACC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB,EAAEC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;AAE9F,SAASC,aAAaA,CAACC,IAAI,EAAE;EACzB,OAAO,GAAGA,IAAI,MAAM;AACxB;AAEA,MAAMC,GAAG,GAAGR,KAAK,CAACS,MAAM,CAAC;EACrBC,OAAO,EAAEJ,aAAa,CAACL,OAAO;AAClC,CAAC,CAAC;AAEFO,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,GAAG,IAAK;EAClC,MAAMC,CAAC,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACvC,IAAIF,CAAC,EAAED,GAAG,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,CAAC,EAAE;EAChD,OAAOD,GAAG;AACd,CAAC,CAAC;;AAEF;AACA,eAAeN,GAAG;AAClB,SAASA,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}