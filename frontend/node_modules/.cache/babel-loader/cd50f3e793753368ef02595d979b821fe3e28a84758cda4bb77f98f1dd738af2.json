{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uknord5he\\\\BH3\\\\dev\\\\diplomas\\\\frontend\\\\src\\\\hooks\\\\useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport api from '../services/api';\n\n/** Бекенд как в проекте */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EP_ME = '/me';\nconst EP_LOGIN = '/login';\nconst EP_LOGOUT = '/logout';\nconst STORAGE_KEY = 'auth/state/v1';\nfunction useAuthState() {\n  _s();\n  const [user, setUser] = useState(() => {\n    try {\n      return JSON.parse(localStorage.getItem(STORAGE_KEY) || 'null');\n    } catch {\n      return null;\n    }\n  });\n  const [ready, setReady] = useState(false);\n  const persist = u => {\n    setUser(u);\n    try {\n      if (u) localStorage.setItem(STORAGE_KEY, JSON.stringify(u));else localStorage.removeItem(STORAGE_KEY);\n    } catch {}\n  };\n  const isAuthed = !!(user && (user.email || user.isAdmin));\n  const isAdmin = !!(user !== null && user !== void 0 && user.isAdmin);\n\n  /** Проверка сессии на сервере */\n  const refresh = useCallback(async () => {\n    try {\n      const res = await api.get(EP_ME, {\n        headers: {\n          'Cache-Control': 'no-cache',\n          Pragma: 'no-cache',\n          'If-Modified-Since': '0'\n        },\n        validateStatus: () => true\n      });\n      const {\n        status,\n        data\n      } = res;\n      if (status >= 200 && status < 300) {\n        var _ref, _data$email, _data$user, _data$user2, _data$user3;\n        const email = (_ref = (_data$email = data === null || data === void 0 ? void 0 : data.email) !== null && _data$email !== void 0 ? _data$email : data === null || data === void 0 ? void 0 : (_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.email) !== null && _ref !== void 0 ? _ref : null;\n        const admin = !!(data !== null && data !== void 0 && data.isAdmin || (data === null || data === void 0 ? void 0 : data.role) === 'admin' || data !== null && data !== void 0 && (_data$user2 = data.user) !== null && _data$user2 !== void 0 && _data$user2.isAdmin || (data === null || data === void 0 ? void 0 : (_data$user3 = data.user) === null || _data$user3 === void 0 ? void 0 : _data$user3.role) === 'admin');\n        if (email || admin) {\n          persist({\n            email,\n            isAdmin: admin\n          });\n          setReady(true);\n          return true;\n        }\n        persist(null);\n        setReady(true);\n        return false;\n      }\n\n      // 401/403 и прочие → выходим\n      persist(null);\n      setReady(true);\n      return false;\n    } catch {\n      persist(null);\n      setReady(true);\n      return false;\n    }\n  }, []);\n  useEffect(() => {\n    refresh();\n  }, [refresh]);\n\n  /** ВАЖНО: сигнатура под LoginPage (email, password) + сохраняем токен */\n  const login = async (email, password) => {\n    const res = await api.post(EP_LOGIN, {\n      email,\n      password\n    }, {\n      validateStatus: () => true\n    });\n    const {\n      status,\n      data\n    } = res;\n    if (status >= 200 && status < 300) {\n      if (data !== null && data !== void 0 && data.token) {\n        try {\n          localStorage.setItem('token', data.token);\n        } catch {}\n      }\n      const ok = await refresh(); // подтверждаем на сервере\n      if (!ok) throw new Error('Login error');\n      return;\n    }\n    if (status === 401 || status === 403) {\n      throw new Error((data === null || data === void 0 ? void 0 : data.message) || 'Невірний логін або пароль');\n    }\n    throw new Error((data === null || data === void 0 ? void 0 : data.message) || 'Помилка авторизації');\n  };\n  const logout = async () => {\n    try {\n      await api.post(EP_LOGOUT, null, {\n        validateStatus: () => true\n      });\n    } catch {}\n    try {\n      localStorage.removeItem('token');\n    } catch {}\n    persist(null);\n  };\n  return {\n    user,\n    isAuthed,\n    isAdmin,\n    ready,\n    refresh,\n    login,\n    logout\n  };\n}\n_s(useAuthState, \"HPrDZ0vFspgvCuk9jG8dnrpEOUM=\");\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  isAuthed: false,\n  isAdmin: false,\n  ready: false,\n  refresh: async () => {},\n  login: async () => {},\n  logout: async () => {}\n});\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const auth = useAuthState();\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 12\n  }, this);\n}\n_s2(AuthProvider, \"v5+xnRzRGgUkz6HrltagqFou1eE=\", false, function () {\n  return [useAuthState];\n});\n_c = AuthProvider;\nexport function useAuth() {\n  _s3();\n  return useContext(AuthContext);\n}\n_s3(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default useAuth;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useCallback","useContext","useEffect","useState","api","jsxDEV","_jsxDEV","EP_ME","EP_LOGIN","EP_LOGOUT","STORAGE_KEY","useAuthState","_s","user","setUser","JSON","parse","localStorage","getItem","ready","setReady","persist","u","setItem","stringify","removeItem","isAuthed","email","isAdmin","refresh","res","get","headers","Pragma","validateStatus","status","data","_ref","_data$email","_data$user","_data$user2","_data$user3","admin","role","login","password","post","token","ok","Error","message","logout","AuthContext","AuthProvider","children","_s2","auth","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s3","$RefreshReg$"],"sources":["D:/Uknord5he/BH3/dev/diplomas/frontend/src/hooks/useAuth.js"],"sourcesContent":["import React, {\r\n    createContext,\r\n    useCallback,\r\n    useContext,\r\n    useEffect,\r\n    useState,\r\n} from 'react';\r\nimport api from '../services/api';\r\n\r\n/** Бекенд как в проекте */\r\nconst EP_ME = '/me';\r\nconst EP_LOGIN = '/login';\r\nconst EP_LOGOUT = '/logout';\r\n\r\nconst STORAGE_KEY = 'auth/state/v1';\r\n\r\nfunction useAuthState() {\r\n    const [user, setUser] = useState(() => {\r\n        try { return JSON.parse(localStorage.getItem(STORAGE_KEY) || 'null'); }\r\n        catch { return null; }\r\n    });\r\n    const [ready, setReady] = useState(false);\r\n\r\n    const persist = (u) => {\r\n        setUser(u);\r\n        try {\r\n            if (u) localStorage.setItem(STORAGE_KEY, JSON.stringify(u));\r\n            else localStorage.removeItem(STORAGE_KEY);\r\n        } catch {}\r\n    };\r\n\r\n    const isAuthed = !!(user && (user.email || user.isAdmin));\r\n    const isAdmin = !!user?.isAdmin;\r\n\r\n    /** Проверка сессии на сервере */\r\n    const refresh = useCallback(async () => {\r\n        try {\r\n            const res = await api.get(EP_ME, {\r\n                headers: { 'Cache-Control': 'no-cache', Pragma: 'no-cache', 'If-Modified-Since': '0' },\r\n                validateStatus: () => true,\r\n            });\r\n\r\n            const { status, data } = res;\r\n            if (status >= 200 && status < 300) {\r\n                const email = data?.email ?? data?.user?.email ?? null;\r\n                const admin = !!(data?.isAdmin || data?.role === 'admin' || data?.user?.isAdmin || data?.user?.role === 'admin');\r\n                if (email || admin) {\r\n                    persist({ email, isAdmin: admin });\r\n                    setReady(true);\r\n                    return true;\r\n                }\r\n                persist(null);\r\n                setReady(true);\r\n                return false;\r\n            }\r\n\r\n            // 401/403 и прочие → выходим\r\n            persist(null);\r\n            setReady(true);\r\n            return false;\r\n        } catch {\r\n            persist(null);\r\n            setReady(true);\r\n            return false;\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => { refresh(); }, [refresh]);\r\n\r\n    /** ВАЖНО: сигнатура под LoginPage (email, password) + сохраняем токен */\r\n    const login = async (email, password) => {\r\n        const res = await api.post(EP_LOGIN, { email, password }, { validateStatus: () => true });\r\n        const { status, data } = res;\r\n\r\n        if (status >= 200 && status < 300) {\r\n            if (data?.token) {\r\n                try { localStorage.setItem('token', data.token); } catch {}\r\n            }\r\n            const ok = await refresh(); // подтверждаем на сервере\r\n            if (!ok) throw new Error('Login error');\r\n            return;\r\n        }\r\n        if (status === 401 || status === 403) {\r\n            throw new Error(data?.message || 'Невірний логін або пароль');\r\n        }\r\n        throw new Error(data?.message || 'Помилка авторизації');\r\n    };\r\n\r\n    const logout = async () => {\r\n        try { await api.post(EP_LOGOUT, null, { validateStatus: () => true }); } catch {}\r\n        try { localStorage.removeItem('token'); } catch {}\r\n        persist(null);\r\n    };\r\n\r\n    return { user, isAuthed, isAdmin, ready, refresh, login, logout };\r\n}\r\n\r\nconst AuthContext = createContext({\r\n    user: null,\r\n    isAuthed: false,\r\n    isAdmin: false,\r\n    ready: false,\r\n    refresh: async () => {},\r\n    login: async () => {},\r\n    logout: async () => {},\r\n});\r\n\r\nexport function AuthProvider({ children }) {\r\n    const auth = useAuthState();\r\n    return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\r\n}\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport default useAuth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}