{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uknord5he\\\\BH3\\\\dev\\\\diplomas\\\\frontend\\\\src\\\\hooks\\\\useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STORAGE_KEY = 'auth/state/v1';\nfunction useAuthState() {\n  _s();\n  const [user, setUser] = useState(() => {\n    try {\n      return JSON.parse(localStorage.getItem(STORAGE_KEY) || 'null');\n    } catch {\n      return null;\n    }\n  });\n  const persist = u => {\n    setUser(u);\n    try {\n      localStorage.setItem(STORAGE_KEY, JSON.stringify(u));\n    } catch {}\n  };\n  const isAuthed = !!user;\n  const isAdmin = !!(user !== null && user !== void 0 && user.isAdmin);\n\n  // Пытаемся получить профиль с бэка (если эндпоинт есть)\n  const refresh = useCallback(async () => {\n    const candidates = ['/auth/me', '/admin/me', '/me'];\n    for (const ep of candidates) {\n      try {\n        const {\n          data\n        } = await api.get(ep);\n        const u = {\n          email: (data === null || data === void 0 ? void 0 : data.email) || (user === null || user === void 0 ? void 0 : user.email) || null,\n          isAdmin: !!(data !== null && data !== void 0 && data.isAdmin || (data === null || data === void 0 ? void 0 : data.role) === 'admin')\n        };\n        persist(u);\n        return;\n      } catch (e) {\n        var _e$response;\n        const st = e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : _e$response.status;\n        if (st !== 404 && st !== 405) break; // другая ошибка — не продолжаем\n      }\n    }\n    // если ничего не нашли — оставляем локальный state как есть\n  }, [user === null || user === void 0 ? void 0 : user.email]);\n  useEffect(() => {\n    refresh();\n  }, [refresh]);\n\n  // Нормальный логин: пробуем известные пути, без любых фоллбеков\n  const login = async ({\n    email,\n    password\n  }) => {\n    const body = {\n      email,\n      password\n    };\n    const endpoints = ['/auth/login', '/admin/login', '/login'];\n    let last404 = false;\n    for (const ep of endpoints) {\n      try {\n        await api.post(ep, body);\n        await refresh();\n        return;\n      } catch (e) {\n        var _e$response2, _e$response4, _e$response4$data;\n        const st = e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : _e$response2.status;\n        if (st === 401 || st === 403) {\n          var _e$response3, _e$response3$data;\n          throw new Error((e === null || e === void 0 ? void 0 : (_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.message) || 'Невірний логін або пароль');\n        }\n        if (st === 404 || st === 405) {\n          last404 = true;\n          continue; // попробуем следующий эндпоинт\n        }\n        throw new Error((e === null || e === void 0 ? void 0 : (_e$response4 = e.response) === null || _e$response4 === void 0 ? void 0 : (_e$response4$data = _e$response4.data) === null || _e$response4$data === void 0 ? void 0 : _e$response4$data.message) || 'Помилка авторизації');\n      }\n    }\n    if (last404) throw new Error('Не знайдено маршрут авторизації');\n    throw new Error('Помилка авторизації');\n  };\n  const logout = async () => {\n    const endpoints = ['/auth/logout', '/admin/logout', '/logout'];\n    for (const ep of endpoints) {\n      try {\n        await api.post(ep);\n        break;\n      } catch (e) {\n        var _e$response5;\n        const st = e === null || e === void 0 ? void 0 : (_e$response5 = e.response) === null || _e$response5 === void 0 ? void 0 : _e$response5.status;\n        if (st !== 404 && st !== 405) break;\n      }\n    }\n    try {\n      localStorage.removeItem(STORAGE_KEY);\n    } catch {}\n    setUser(null);\n  };\n  return {\n    user,\n    isAuthed,\n    isAdmin,\n    refresh,\n    login,\n    logout\n  };\n}\n\n/** Контекст + провайдер */\n_s(useAuthState, \"tN4KI9ftSx1/21Kn+nHPQev9Kxk=\");\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  isAuthed: false,\n  isAdmin: false,\n  refresh: async () => {},\n  login: async () => {},\n  logout: async () => {}\n});\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const auth = useAuthState();\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 12\n  }, this);\n}\n_s2(AuthProvider, \"v5+xnRzRGgUkz6HrltagqFou1eE=\", false, function () {\n  return [useAuthState];\n});\n_c = AuthProvider;\nexport function useAuth() {\n  _s3();\n  return useContext(AuthContext);\n}\n_s3(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default useAuth;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useCallback","useContext","useEffect","useState","api","jsxDEV","_jsxDEV","STORAGE_KEY","useAuthState","_s","user","setUser","JSON","parse","localStorage","getItem","persist","u","setItem","stringify","isAuthed","isAdmin","refresh","candidates","ep","data","get","email","role","e","_e$response","st","response","status","login","password","body","endpoints","last404","post","_e$response2","_e$response4","_e$response4$data","_e$response3","_e$response3$data","Error","message","logout","_e$response5","removeItem","AuthContext","AuthProvider","children","_s2","auth","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s3","$RefreshReg$"],"sources":["D:/Uknord5he/BH3/dev/diplomas/frontend/src/hooks/useAuth.js"],"sourcesContent":["import React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\r\nimport api from '../services/api';\r\n\r\nconst STORAGE_KEY = 'auth/state/v1';\r\n\r\nfunction useAuthState() {\r\n    const [user, setUser] = useState(() => {\r\n        try { return JSON.parse(localStorage.getItem(STORAGE_KEY) || 'null'); }\r\n        catch { return null; }\r\n    });\r\n\r\n    const persist = (u) => {\r\n        setUser(u);\r\n        try { localStorage.setItem(STORAGE_KEY, JSON.stringify(u)); } catch {}\r\n    };\r\n\r\n    const isAuthed = !!user;\r\n    const isAdmin  = !!user?.isAdmin;\r\n\r\n    // Пытаемся получить профиль с бэка (если эндпоинт есть)\r\n    const refresh = useCallback(async () => {\r\n        const candidates = ['/auth/me', '/admin/me', '/me'];\r\n        for (const ep of candidates) {\r\n            try {\r\n                const { data } = await api.get(ep);\r\n                const u = {\r\n                    email: data?.email || user?.email || null,\r\n                    isAdmin: !!(data?.isAdmin || data?.role === 'admin'),\r\n                };\r\n                persist(u);\r\n                return;\r\n            } catch (e) {\r\n                const st = e?.response?.status;\r\n                if (st !== 404 && st !== 405) break; // другая ошибка — не продолжаем\r\n            }\r\n        }\r\n        // если ничего не нашли — оставляем локальный state как есть\r\n    }, [user?.email]);\r\n\r\n    useEffect(() => { refresh(); }, [refresh]);\r\n\r\n    // Нормальный логин: пробуем известные пути, без любых фоллбеков\r\n    const login = async ({ email, password }) => {\r\n        const body = { email, password };\r\n        const endpoints = ['/auth/login', '/admin/login', '/login'];\r\n\r\n        let last404 = false;\r\n        for (const ep of endpoints) {\r\n            try {\r\n                await api.post(ep, body);\r\n                await refresh();\r\n                return;\r\n            } catch (e) {\r\n                const st = e?.response?.status;\r\n                if (st === 401 || st === 403) {\r\n                    throw new Error(e?.response?.data?.message || 'Невірний логін або пароль');\r\n                }\r\n                if (st === 404 || st === 405) {\r\n                    last404 = true;\r\n                    continue; // попробуем следующий эндпоинт\r\n                }\r\n                throw new Error(e?.response?.data?.message || 'Помилка авторизації');\r\n            }\r\n        }\r\n        if (last404) throw new Error('Не знайдено маршрут авторизації');\r\n        throw new Error('Помилка авторизації');\r\n    };\r\n\r\n    const logout = async () => {\r\n        const endpoints = ['/auth/logout', '/admin/logout', '/logout'];\r\n        for (const ep of endpoints) {\r\n            try { await api.post(ep); break; } catch (e) {\r\n                const st = e?.response?.status;\r\n                if (st !== 404 && st !== 405) break;\r\n            }\r\n        }\r\n        try { localStorage.removeItem(STORAGE_KEY); } catch {}\r\n        setUser(null);\r\n    };\r\n\r\n    return { user, isAuthed, isAdmin, refresh, login, logout };\r\n}\r\n\r\n/** Контекст + провайдер */\r\nconst AuthContext = createContext({\r\n    user: null,\r\n    isAuthed: false,\r\n    isAdmin: false,\r\n    refresh: async () => {},\r\n    login: async () => {},\r\n    logout: async () => {},\r\n});\r\n\r\nexport function AuthProvider({ children }) {\r\n    const auth = useAuthState();\r\n    return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\r\n}\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport default useAuth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}