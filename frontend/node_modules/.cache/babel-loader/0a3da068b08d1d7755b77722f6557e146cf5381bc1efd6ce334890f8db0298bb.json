{"ast":null,"code":"// frontend/src/services/diplomaService.js\nimport api from './api';\n\n// -------- helpers --------\nfunction buildUrl(path) {\n  var _api$defaults;\n  const base = ((api === null || api === void 0 ? void 0 : (_api$defaults = api.defaults) === null || _api$defaults === void 0 ? void 0 : _api$defaults.baseURL) || '').replace(/\\/+$/, '');\n  const p = path.startsWith('/') ? path : `/${path}`;\n  return base ? `${base}${p}` : p; // если baseURL не задан — работаем относительным путём\n}\nasync function fetchJson(url, opts = {}) {\n  const res = await fetch(url, {\n    credentials: 'include',\n    ...opts\n  });\n  const contentType = res.headers.get('content-type') || '';\n  const isJson = contentType.includes('application/json');\n  if (!res.ok) {\n    const payload = isJson ? await res.json().catch(() => ({})) : {\n      message: await res.text().catch(() => res.statusText)\n    };\n    const err = new Error((payload === null || payload === void 0 ? void 0 : payload.message) || res.statusText || 'Request failed');\n    err.status = res.status;\n    err.payload = payload;\n    throw err;\n  }\n  return isJson ? res.json() : {};\n}\n\n// -------- filters / list / details (axios ok) --------\nexport async function getFilters() {\n  const {\n    data\n  } = await api.get('/diplomas/filters');\n  return data;\n}\nexport async function getDiplomas(params = {}) {\n  const {\n    data\n  } = await api.get('/diplomas', {\n    params\n  });\n  return data;\n}\nexport async function getDiploma(id) {\n  const {\n    data\n  } = await api.get(`/diplomas/${id}`);\n  return data;\n}\n\n// -------- create / update with FormData via fetch (надёжно для multer) --------\nexport async function createDiploma(formData /* FormData */) {\n  return fetchJson(buildUrl('/diplomas'), {\n    method: 'POST',\n    body: formData\n  });\n}\nexport async function updateDiploma(id, formData /* FormData */) {\n  return fetchJson(buildUrl(`/diplomas/${id}`), {\n    method: 'PATCH',\n    body: formData\n  });\n}\n\n// -------- admin ops --------\nexport async function deleteDiploma(id) {\n  const {\n    data\n  } = await api.delete(`/diplomas/${id}`);\n  return data;\n}\nexport async function verifyDiploma(id, value = true) {\n  const {\n    data\n  } = await api.patch(`/diplomas/${id}`, {\n    isVerified: !!value\n  });\n  return data;\n}\nexport async function unverifyDiploma(id) {\n  return verifyDiploma(id, false);\n}","map":{"version":3,"names":["api","buildUrl","path","_api$defaults","base","defaults","baseURL","replace","p","startsWith","fetchJson","url","opts","res","fetch","credentials","contentType","headers","get","isJson","includes","ok","payload","json","catch","message","text","statusText","err","Error","status","getFilters","data","getDiplomas","params","getDiploma","id","createDiploma","formData","method","body","updateDiploma","deleteDiploma","delete","verifyDiploma","value","patch","isVerified","unverifyDiploma"],"sources":["D:/Uknord5he/BH3/dev/diplomas/frontend/src/services/diplomaService.js"],"sourcesContent":["// frontend/src/services/diplomaService.js\r\nimport api from './api';\r\n\r\n// -------- helpers --------\r\nfunction buildUrl(path) {\r\n    const base = (api?.defaults?.baseURL || '').replace(/\\/+$/, '');\r\n    const p = path.startsWith('/') ? path : `/${path}`;\r\n    return base ? `${base}${p}` : p; // если baseURL не задан — работаем относительным путём\r\n}\r\n\r\nasync function fetchJson(url, opts = {}) {\r\n    const res = await fetch(url, { credentials: 'include', ...opts });\r\n    const contentType = res.headers.get('content-type') || '';\r\n    const isJson = contentType.includes('application/json');\r\n\r\n    if (!res.ok) {\r\n        const payload = isJson ? await res.json().catch(() => ({})) : { message: await res.text().catch(() => res.statusText) };\r\n        const err = new Error(payload?.message || res.statusText || 'Request failed');\r\n        err.status = res.status;\r\n        err.payload = payload;\r\n        throw err;\r\n    }\r\n    return isJson ? res.json() : {};\r\n}\r\n\r\n// -------- filters / list / details (axios ok) --------\r\nexport async function getFilters() {\r\n    const { data } = await api.get('/diplomas/filters');\r\n    return data;\r\n}\r\n\r\nexport async function getDiplomas(params = {}) {\r\n    const { data } = await api.get('/diplomas', { params });\r\n    return data;\r\n}\r\n\r\nexport async function getDiploma(id) {\r\n    const { data } = await api.get(`/diplomas/${id}`);\r\n    return data;\r\n}\r\n\r\n// -------- create / update with FormData via fetch (надёжно для multer) --------\r\nexport async function createDiploma(formData /* FormData */) {\r\n    return fetchJson(buildUrl('/diplomas'), { method: 'POST', body: formData });\r\n}\r\n\r\nexport async function updateDiploma(id, formData /* FormData */) {\r\n    return fetchJson(buildUrl(`/diplomas/${id}`), { method: 'PATCH', body: formData });\r\n}\r\n\r\n// -------- admin ops --------\r\nexport async function deleteDiploma(id) {\r\n    const { data } = await api.delete(`/diplomas/${id}`);\r\n    return data;\r\n}\r\n\r\nexport async function verifyDiploma(id, value = true) {\r\n    const { data } = await api.patch(`/diplomas/${id}`, { isVerified: !!value });\r\n    return data;\r\n}\r\nexport async function unverifyDiploma(id) { return verifyDiploma(id, false); }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}