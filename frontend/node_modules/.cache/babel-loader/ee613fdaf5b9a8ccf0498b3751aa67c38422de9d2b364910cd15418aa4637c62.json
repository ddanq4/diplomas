{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uknord5he\\\\BH3\\\\dev\\\\diplomas\\\\frontend\\\\src\\\\hooks\\\\useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STORAGE_KEY = 'auth/state/v1';\nfunction useAuthState() {\n  _s();\n  const [user, setUser] = useState(() => {\n    try {\n      return JSON.parse(localStorage.getItem(STORAGE_KEY) || 'null');\n    } catch {\n      return null;\n    }\n  });\n  const persist = u => {\n    setUser(u);\n    try {\n      if (u) localStorage.setItem(STORAGE_KEY, JSON.stringify(u));else localStorage.removeItem(STORAGE_KEY);\n    } catch {}\n  };\n\n  // ВАЖНО: авторизован только если есть email или флаг админа\n  const isAuthed = !!(user && (user.email || user.isAdmin));\n  const isAdmin = !!(user !== null && user !== void 0 && user.isAdmin);\n\n  /** Валидируем текущую сессию.\r\n   * Принимаем только 2xx + { email } или роль admin.\r\n   * 304/404/405 → считаем гостем (убираем «Вийти»).\r\n   * 401/403 → тоже гость.\r\n   */\n  const refresh = useCallback(async () => {\n    const candidates = ['/auth/me', '/admin/me', '/me'];\n    for (const ep of candidates) {\n      try {\n        // чтобы поймать 304 как «не успех», даём валидатор статуса\n        const res = await api.get(ep, {\n          validateStatus: () => true\n        });\n        const {\n          status,\n          data\n        } = res;\n        if (status >= 200 && status < 300) {\n          var _ref, _data$email, _data$user, _data$user2;\n          const email = (_ref = (_data$email = data === null || data === void 0 ? void 0 : data.email) !== null && _data$email !== void 0 ? _data$email : data === null || data === void 0 ? void 0 : (_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.email) !== null && _ref !== void 0 ? _ref : null;\n          const admin = !!(data !== null && data !== void 0 && data.isAdmin || (data === null || data === void 0 ? void 0 : data.role) === 'admin' || (data === null || data === void 0 ? void 0 : (_data$user2 = data.user) === null || _data$user2 === void 0 ? void 0 : _data$user2.role) === 'admin');\n          if (email || admin) {\n            persist({\n              email,\n              isAdmin: admin\n            });\n            return;\n          }\n          // 2xx, но ничего полезного → трактуем как невалидную сессию\n          persist(null);\n          return;\n        }\n        if (status === 401 || status === 403) {\n          persist(null);\n          return;\n        }\n        // 304/404/405 — пробуем следующий EP\n        if (status !== 304 && status !== 404 && status !== 405) {\n          persist(null);\n          return;\n        }\n      } catch {\n        // сетевые ошибки → считаем невалидной\n        persist(null);\n        return;\n      }\n    }\n\n    // Ни один EP не подошёл → гость\n    persist(null);\n  }, []);\n  useEffect(() => {\n    refresh();\n  }, [refresh]);\n\n  /** Нормальный логин без фоллбеков-магии. */\n  const login = async ({\n    email,\n    password\n  }) => {\n    const body = {\n      email,\n      password\n    };\n    const endpoints = ['/auth/login', '/admin/login', '/login'];\n    let saw404 = false;\n    for (const ep of endpoints) {\n      try {\n        const res = await api.post(ep, body, {\n          validateStatus: () => true\n        });\n        const {\n          status,\n          data\n        } = res;\n        if (status >= 200 && status < 300) {\n          var _data$user3;\n          const admin = !!(data !== null && data !== void 0 && data.isAdmin || (data === null || data === void 0 ? void 0 : data.role) === 'admin' || (data === null || data === void 0 ? void 0 : (_data$user3 = data.user) === null || _data$user3 === void 0 ? void 0 : _data$user3.role) === 'admin' || ep.includes('/admin/'));\n          // Сразу фиксируем сессию (на случай отсутствия /auth/me)\n          persist({\n            email,\n            isAdmin: admin\n          });\n          return;\n        }\n        if (status === 401 || status === 403) {\n          throw new Error((data === null || data === void 0 ? void 0 : data.message) || 'Невірний логін або пароль');\n        }\n        if (status === 404 || status === 405) {\n          saw404 = true;\n          continue;\n        }\n        throw new Error((data === null || data === void 0 ? void 0 : data.message) || 'Помилка авторизації');\n      } catch (e) {\n        if (e instanceof Error && (e.message === 'Невірний логін або пароль' || e.message.startsWith('Помилка'))) {\n          throw e;\n        }\n        // другие network ошибки\n        throw new Error('Помилка авторизації');\n      }\n    }\n    if (saw404) throw new Error('Не знайдено маршрут авторизації');\n    throw new Error('Помилка авторизації');\n  };\n  const logout = async () => {\n    const endpoints = ['/auth/logout', '/admin/logout', '/logout'];\n    for (const ep of endpoints) {\n      try {\n        await api.post(ep, null, {\n          validateStatus: () => true\n        });\n        break;\n      } catch {\n        break;\n      }\n    }\n    persist(null);\n  };\n  return {\n    user,\n    isAuthed,\n    isAdmin,\n    refresh,\n    login,\n    logout\n  };\n}\n\n/* === Контекст/провайдер/хук === */\n_s(useAuthState, \"tN4KI9ftSx1/21Kn+nHPQev9Kxk=\");\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  isAuthed: false,\n  isAdmin: false,\n  refresh: async () => {},\n  login: async () => {},\n  logout: async () => {}\n});\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const auth = useAuthState();\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 12\n  }, this);\n}\n_s2(AuthProvider, \"v5+xnRzRGgUkz6HrltagqFou1eE=\", false, function () {\n  return [useAuthState];\n});\n_c = AuthProvider;\nexport function useAuth() {\n  _s3();\n  return useContext(AuthContext);\n}\n_s3(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default useAuth;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useCallback","useContext","useEffect","useState","api","jsxDEV","_jsxDEV","STORAGE_KEY","useAuthState","_s","user","setUser","JSON","parse","localStorage","getItem","persist","u","setItem","stringify","removeItem","isAuthed","email","isAdmin","refresh","candidates","ep","res","get","validateStatus","status","data","_ref","_data$email","_data$user","_data$user2","admin","role","login","password","body","endpoints","saw404","post","_data$user3","includes","Error","message","e","startsWith","logout","AuthContext","AuthProvider","children","_s2","auth","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s3","$RefreshReg$"],"sources":["D:/Uknord5he/BH3/dev/diplomas/frontend/src/hooks/useAuth.js"],"sourcesContent":["import React, {\r\n    createContext,\r\n    useCallback,\r\n    useContext,\r\n    useEffect,\r\n    useState,\r\n} from 'react';\r\nimport api from '../services/api';\r\n\r\nconst STORAGE_KEY = 'auth/state/v1';\r\n\r\nfunction useAuthState() {\r\n    const [user, setUser] = useState(() => {\r\n        try { return JSON.parse(localStorage.getItem(STORAGE_KEY) || 'null'); }\r\n        catch { return null; }\r\n    });\r\n\r\n    const persist = (u) => {\r\n        setUser(u);\r\n        try {\r\n            if (u) localStorage.setItem(STORAGE_KEY, JSON.stringify(u));\r\n            else localStorage.removeItem(STORAGE_KEY);\r\n        } catch {}\r\n    };\r\n\r\n    // ВАЖНО: авторизован только если есть email или флаг админа\r\n    const isAuthed = !!(user && (user.email || user.isAdmin));\r\n    const isAdmin  = !!user?.isAdmin;\r\n\r\n    /** Валидируем текущую сессию.\r\n     * Принимаем только 2xx + { email } или роль admin.\r\n     * 304/404/405 → считаем гостем (убираем «Вийти»).\r\n     * 401/403 → тоже гость.\r\n     */\r\n    const refresh = useCallback(async () => {\r\n        const candidates = ['/auth/me', '/admin/me', '/me'];\r\n\r\n        for (const ep of candidates) {\r\n            try {\r\n                // чтобы поймать 304 как «не успех», даём валидатор статуса\r\n                const res = await api.get(ep, { validateStatus: () => true });\r\n                const { status, data } = res;\r\n\r\n                if (status >= 200 && status < 300) {\r\n                    const email = data?.email ?? data?.user?.email ?? null;\r\n                    const admin = !!(data?.isAdmin || data?.role === 'admin' || data?.user?.role === 'admin');\r\n                    if (email || admin) {\r\n                        persist({ email, isAdmin: admin });\r\n                        return;\r\n                    }\r\n                    // 2xx, но ничего полезного → трактуем как невалидную сессию\r\n                    persist(null);\r\n                    return;\r\n                }\r\n\r\n                if (status === 401 || status === 403) { persist(null); return; }\r\n                // 304/404/405 — пробуем следующий EP\r\n                if (status !== 304 && status !== 404 && status !== 405) { persist(null); return; }\r\n            } catch {\r\n                // сетевые ошибки → считаем невалидной\r\n                persist(null);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Ни один EP не подошёл → гость\r\n        persist(null);\r\n    }, []);\r\n\r\n    useEffect(() => { refresh(); }, [refresh]);\r\n\r\n    /** Нормальный логин без фоллбеков-магии. */\r\n    const login = async ({ email, password }) => {\r\n        const body = { email, password };\r\n        const endpoints = ['/auth/login', '/admin/login', '/login'];\r\n\r\n        let saw404 = false;\r\n\r\n        for (const ep of endpoints) {\r\n            try {\r\n                const res = await api.post(ep, body, { validateStatus: () => true });\r\n                const { status, data } = res;\r\n\r\n                if (status >= 200 && status < 300) {\r\n                    const admin = !!(data?.isAdmin || data?.role === 'admin' || data?.user?.role === 'admin' || ep.includes('/admin/'));\r\n                    // Сразу фиксируем сессию (на случай отсутствия /auth/me)\r\n                    persist({ email, isAdmin: admin });\r\n                    return;\r\n                }\r\n\r\n                if (status === 401 || status === 403) {\r\n                    throw new Error(data?.message || 'Невірний логін або пароль');\r\n                }\r\n                if (status === 404 || status === 405) { saw404 = true; continue; }\r\n                throw new Error(data?.message || 'Помилка авторизації');\r\n            } catch (e) {\r\n                if (e instanceof Error && (e.message === 'Невірний логін або пароль' || e.message.startsWith('Помилка'))) {\r\n                    throw e;\r\n                }\r\n                // другие network ошибки\r\n                throw new Error('Помилка авторизації');\r\n            }\r\n        }\r\n\r\n        if (saw404) throw new Error('Не знайдено маршрут авторизації');\r\n        throw new Error('Помилка авторизації');\r\n    };\r\n\r\n    const logout = async () => {\r\n        const endpoints = ['/auth/logout', '/admin/logout', '/logout'];\r\n        for (const ep of endpoints) {\r\n            try {\r\n                await api.post(ep, null, { validateStatus: () => true });\r\n                break;\r\n            } catch { break; }\r\n        }\r\n        persist(null);\r\n    };\r\n\r\n    return { user, isAuthed, isAdmin, refresh, login, logout };\r\n}\r\n\r\n/* === Контекст/провайдер/хук === */\r\nconst AuthContext = createContext({\r\n    user: null,\r\n    isAuthed: false,\r\n    isAdmin: false,\r\n    refresh: async () => {},\r\n    login: async () => {},\r\n    logout: async () => {},\r\n});\r\n\r\nexport function AuthProvider({ children }) {\r\n    const auth = useAuthState();\r\n    return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\r\n}\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport default useAuth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}