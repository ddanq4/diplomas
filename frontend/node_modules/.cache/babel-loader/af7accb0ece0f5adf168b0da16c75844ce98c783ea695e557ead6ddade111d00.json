{"ast":null,"code":"// frontend/src/services/diplomaService.js\nimport api from './api';\n\n// общий прогресс-хэндлер для загрузки файлов\nconst onUpload = onProgress => ({\n  onUploadProgress: e => {\n    if (!onProgress || !(e !== null && e !== void 0 && e.total)) return;\n    const p = Math.round(e.loaded * 100 / e.total);\n    try {\n      onProgress(p);\n    } catch {}\n  }\n});\n\n/** Справочники (факультеты/специальности) */\nexport async function getFilters() {\n  const {\n    data\n  } = await api.get('/diplomas/filters');\n  return data;\n}\n\n/** Список дипломов (поиск/фильтры/пагинация) */\nexport async function getDiplomas(params = {}) {\n  const {\n    data\n  } = await api.get('/diplomas', {\n    params\n  });\n  return data; // { rows, total, page, limit }\n}\n\n/** Один диплом */\nexport async function getDiploma(id) {\n  const {\n    data\n  } = await api.get(`/diplomas/${id}`);\n  return data;\n}\n\n/** Создать диплом (multipart/form-data) */\nexport async function createDiploma(formData, progressCb) {\n  // formData: studentName, specialty, year, diplomaNumber, file\n  const {\n    data\n  } = await api.post('/diplomas', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    },\n    ...onUpload(progressCb)\n  });\n  return data;\n}\n\n/** Обновить диплом (multipart/form-data, файл опционален) */\nexport async function updateDiploma(id, formData, progressCb) {\n  // formData: studentName?, specialty?, year?, diplomaNumber?, isVerified?, file?\n  const {\n    data\n  } = await api.patch(`/diplomas/${id}`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    },\n    ...onUpload(progressCb)\n  });\n  return data;\n}\n\n/** Удалить диплом */\nexport async function deleteDiploma(id) {\n  const {\n    data\n  } = await api.delete(`/diplomas/${id}`);\n  return data;\n}\n\n/** Подтвердить/снять подтверждение диплома (без файла) */\nexport async function verifyDiploma(id, value = true) {\n  // backend принимает JSON с полем isVerified\n  const {\n    data\n  } = await api.patch(`/diplomas/${id}`, {\n    isVerified: !!value\n  });\n  return data; // возвращает обновлённый объект диплома\n}\n\n/** Удобный алиас для снятия подтверждения */\nexport async function unverifyDiploma(id) {\n  return verifyDiploma(id, false);\n}","map":{"version":3,"names":["api","onUpload","onProgress","onUploadProgress","e","total","p","Math","round","loaded","getFilters","data","get","getDiplomas","params","getDiploma","id","createDiploma","formData","progressCb","post","headers","updateDiploma","patch","deleteDiploma","delete","verifyDiploma","value","isVerified","unverifyDiploma"],"sources":["D:/Uknord5he/BH3/dev/diplomas/frontend/src/services/diplomaService.js"],"sourcesContent":["// frontend/src/services/diplomaService.js\r\nimport api from './api';\r\n\r\n// общий прогресс-хэндлер для загрузки файлов\r\nconst onUpload = (onProgress) => ({\r\n    onUploadProgress: (e) => {\r\n        if (!onProgress || !e?.total) return;\r\n        const p = Math.round((e.loaded * 100) / e.total);\r\n        try { onProgress(p); } catch {}\r\n    },\r\n});\r\n\r\n/** Справочники (факультеты/специальности) */\r\nexport async function getFilters() {\r\n    const { data } = await api.get('/diplomas/filters');\r\n    return data;\r\n}\r\n\r\n/** Список дипломов (поиск/фильтры/пагинация) */\r\nexport async function getDiplomas(params = {}) {\r\n    const { data } = await api.get('/diplomas', { params });\r\n    return data; // { rows, total, page, limit }\r\n}\r\n\r\n/** Один диплом */\r\nexport async function getDiploma(id) {\r\n    const { data } = await api.get(`/diplomas/${id}`);\r\n    return data;\r\n}\r\n\r\n/** Создать диплом (multipart/form-data) */\r\nexport async function createDiploma(formData, progressCb) {\r\n    // formData: studentName, specialty, year, diplomaNumber, file\r\n    const { data } = await api.post('/diplomas', formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n        ...onUpload(progressCb),\r\n    });\r\n    return data;\r\n}\r\n\r\n/** Обновить диплом (multipart/form-data, файл опционален) */\r\nexport async function updateDiploma(id, formData, progressCb) {\r\n    // formData: studentName?, specialty?, year?, diplomaNumber?, isVerified?, file?\r\n    const { data } = await api.patch(`/diplomas/${id}`, formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' },\r\n        ...onUpload(progressCb),\r\n    });\r\n    return data;\r\n}\r\n\r\n/** Удалить диплом */\r\nexport async function deleteDiploma(id) {\r\n    const { data } = await api.delete(`/diplomas/${id}`);\r\n    return data;\r\n}\r\n\r\n/** Подтвердить/снять подтверждение диплома (без файла) */\r\nexport async function verifyDiploma(id, value = true) {\r\n    // backend принимает JSON с полем isVerified\r\n    const { data } = await api.patch(`/diplomas/${id}`, { isVerified: !!value });\r\n    return data; // возвращает обновлённый объект диплома\r\n}\r\n\r\n/** Удобный алиас для снятия подтверждения */\r\nexport async function unverifyDiploma(id) {\r\n    return verifyDiploma(id, false);\r\n}\r\n"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA,MAAMC,QAAQ,GAAIC,UAAU,KAAM;EAC9BC,gBAAgB,EAAGC,CAAC,IAAK;IACrB,IAAI,CAACF,UAAU,IAAI,EAACE,CAAC,aAADA,CAAC,eAADA,CAAC,CAAEC,KAAK,GAAE;IAC9B,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAAEJ,CAAC,CAACK,MAAM,GAAG,GAAG,GAAIL,CAAC,CAACC,KAAK,CAAC;IAChD,IAAI;MAAEH,UAAU,CAACI,CAAC,CAAC;IAAE,CAAC,CAAC,MAAM,CAAC;EAClC;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,eAAeI,UAAUA,CAAA,EAAG;EAC/B,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,mBAAmB,CAAC;EACnD,OAAOD,IAAI;AACf;;AAEA;AACA,OAAO,eAAeE,WAAWA,CAACC,MAAM,GAAG,CAAC,CAAC,EAAE;EAC3C,MAAM;IAAEH;EAAK,CAAC,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,WAAW,EAAE;IAAEE;EAAO,CAAC,CAAC;EACvD,OAAOH,IAAI,CAAC,CAAC;AACjB;;AAEA;AACA,OAAO,eAAeI,UAAUA,CAACC,EAAE,EAAE;EACjC,MAAM;IAAEL;EAAK,CAAC,GAAG,MAAMX,GAAG,CAACY,GAAG,CAAC,aAAaI,EAAE,EAAE,CAAC;EACjD,OAAOL,IAAI;AACf;;AAEA;AACA,OAAO,eAAeM,aAAaA,CAACC,QAAQ,EAAEC,UAAU,EAAE;EACtD;EACA,MAAM;IAAER;EAAK,CAAC,GAAG,MAAMX,GAAG,CAACoB,IAAI,CAAC,WAAW,EAAEF,QAAQ,EAAE;IACnDG,OAAO,EAAE;MAAE,cAAc,EAAE;IAAsB,CAAC;IAClD,GAAGpB,QAAQ,CAACkB,UAAU;EAC1B,CAAC,CAAC;EACF,OAAOR,IAAI;AACf;;AAEA;AACA,OAAO,eAAeW,aAAaA,CAACN,EAAE,EAAEE,QAAQ,EAAEC,UAAU,EAAE;EAC1D;EACA,MAAM;IAAER;EAAK,CAAC,GAAG,MAAMX,GAAG,CAACuB,KAAK,CAAC,aAAaP,EAAE,EAAE,EAAEE,QAAQ,EAAE;IAC1DG,OAAO,EAAE;MAAE,cAAc,EAAE;IAAsB,CAAC;IAClD,GAAGpB,QAAQ,CAACkB,UAAU;EAC1B,CAAC,CAAC;EACF,OAAOR,IAAI;AACf;;AAEA;AACA,OAAO,eAAea,aAAaA,CAACR,EAAE,EAAE;EACpC,MAAM;IAAEL;EAAK,CAAC,GAAG,MAAMX,GAAG,CAACyB,MAAM,CAAC,aAAaT,EAAE,EAAE,CAAC;EACpD,OAAOL,IAAI;AACf;;AAEA;AACA,OAAO,eAAee,aAAaA,CAACV,EAAE,EAAEW,KAAK,GAAG,IAAI,EAAE;EAClD;EACA,MAAM;IAAEhB;EAAK,CAAC,GAAG,MAAMX,GAAG,CAACuB,KAAK,CAAC,aAAaP,EAAE,EAAE,EAAE;IAAEY,UAAU,EAAE,CAAC,CAACD;EAAM,CAAC,CAAC;EAC5E,OAAOhB,IAAI,CAAC,CAAC;AACjB;;AAEA;AACA,OAAO,eAAekB,eAAeA,CAACb,EAAE,EAAE;EACtC,OAAOU,aAAa,CAACV,EAAE,EAAE,KAAK,CAAC;AACnC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}