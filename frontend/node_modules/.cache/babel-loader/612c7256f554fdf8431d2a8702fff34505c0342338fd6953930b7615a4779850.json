{"ast":null,"code":"var _jsxFileName = \"D:\\\\Uknord5he\\\\BH3\\\\dev\\\\diplomas\\\\frontend\\\\src\\\\hooks\\\\useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useCallback, useContext, useEffect, useState } from 'react';\nimport api from '../services/api';\n\n/**\r\n * Ожидаемые эндпоинты БЭКа (как в изначальной версии):\r\n *   GET  /api/me       -> { email, isAdmin? }   (может вернуться 304)\r\n *   POST /api/login    -> { email, isAdmin? }\r\n *   POST /api/logout   -> { ok: true }\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EP_ME = '/me';\nconst EP_LOGIN = '/login';\nconst EP_LOGOUT = '/logout';\nconst STORAGE_KEY = 'auth/state/v1';\nfunction useAuthState() {\n  _s();\n  const [user, setUser] = useState(() => {\n    try {\n      return JSON.parse(localStorage.getItem(STORAGE_KEY) || 'null');\n    } catch {\n      return null;\n    }\n  });\n  const persist = u => {\n    setUser(u);\n    try {\n      if (u) localStorage.setItem(STORAGE_KEY, JSON.stringify(u));else localStorage.removeItem(STORAGE_KEY);\n    } catch {}\n  };\n\n  // Авторизован — только если есть email или флаг админа\n  const isAuthed = !!(user && (user.email || user.isAdmin));\n  const isAdmin = !!(user !== null && user !== void 0 && user.isAdmin);\n\n  /**\r\n   * Валидируем текущую сессию.\r\n   * - 2xx: берём email/isAdmin из тела (если есть).\r\n   * - 304: НЕ меняем state (оставляем как есть) — это устраняет «мигание».\r\n   * - 401/403: считаем гостем.\r\n   * - прочие коды: state не трогаем (чтобы не дёргать UI).\r\n   */\n  const refresh = useCallback(async () => {\n    try {\n      const res = await api.get(EP_ME, {\n        validateStatus: () => true\n      });\n      const {\n        status,\n        data\n      } = res;\n      if (status >= 200 && status < 300) {\n        var _ref, _data$email, _data$user, _data$user2;\n        const email = (_ref = (_data$email = data === null || data === void 0 ? void 0 : data.email) !== null && _data$email !== void 0 ? _data$email : data === null || data === void 0 ? void 0 : (_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.email) !== null && _ref !== void 0 ? _ref : null;\n        const admin = !!(data !== null && data !== void 0 && data.isAdmin || (data === null || data === void 0 ? void 0 : data.role) === 'admin' || (data === null || data === void 0 ? void 0 : (_data$user2 = data.user) === null || _data$user2 === void 0 ? void 0 : _data$user2.role) === 'admin');\n        if (email || admin) persist({\n          email,\n          isAdmin: admin\n        });\n        // если сервер ответил 200, но без полезных данных — state не трогаем\n        return;\n      }\n      if (status === 304) {\n        // оставляем, как есть — никаких дерганий UI\n        return;\n      }\n      if (status === 401 || status === 403) {\n        persist(null);\n        return;\n      }\n\n      // 404/500 и т.п. — молча игнорируем (state оставляем)\n    } catch {\n      // сеть/ошибка — ничего не меняем\n    }\n  }, []);\n  useEffect(() => {\n    refresh();\n  }, [refresh]);\n\n  /**\r\n   * Нормальный логин: только /login.\r\n   * Сразу записываем пользователя по ответу, не полагаясь на /me.\r\n   */\n  const login = async ({\n    email,\n    password\n  }) => {\n    const res = await api.post(EP_LOGIN, {\n      email,\n      password\n    }, {\n      validateStatus: () => true\n    });\n    const {\n      status,\n      data\n    } = res;\n    if (status >= 200 && status < 300) {\n      var _data$user3;\n      const admin = !!(data !== null && data !== void 0 && data.isAdmin || (data === null || data === void 0 ? void 0 : data.role) === 'admin' || (data === null || data === void 0 ? void 0 : (_data$user3 = data.user) === null || _data$user3 === void 0 ? void 0 : _data$user3.role) === 'admin');\n      persist({\n        email: (data === null || data === void 0 ? void 0 : data.email) || email,\n        isAdmin: admin\n      });\n      return;\n    }\n    if (status === 401 || status === 403) {\n      throw new Error((data === null || data === void 0 ? void 0 : data.message) || 'Невірний логін або пароль');\n    }\n    throw new Error((data === null || data === void 0 ? void 0 : data.message) || 'Помилка авторизації');\n  };\n  const logout = async () => {\n    try {\n      await api.post(EP_LOGOUT, null, {\n        validateStatus: () => true\n      });\n    } catch {}\n    persist(null);\n  };\n  return {\n    user,\n    isAuthed,\n    isAdmin,\n    refresh,\n    login,\n    logout\n  };\n}\n\n/* === Контекст/провайдер/хук === */\n_s(useAuthState, \"tN4KI9ftSx1/21Kn+nHPQev9Kxk=\");\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  isAuthed: false,\n  isAdmin: false,\n  refresh: async () => {},\n  login: async () => {},\n  logout: async () => {}\n});\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const auth = useAuthState();\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: auth,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 12\n  }, this);\n}\n_s2(AuthProvider, \"v5+xnRzRGgUkz6HrltagqFou1eE=\", false, function () {\n  return [useAuthState];\n});\n_c = AuthProvider;\nexport function useAuth() {\n  _s3();\n  return useContext(AuthContext);\n}\n_s3(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport default useAuth;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useCallback","useContext","useEffect","useState","api","jsxDEV","_jsxDEV","EP_ME","EP_LOGIN","EP_LOGOUT","STORAGE_KEY","useAuthState","_s","user","setUser","JSON","parse","localStorage","getItem","persist","u","setItem","stringify","removeItem","isAuthed","email","isAdmin","refresh","res","get","validateStatus","status","data","_ref","_data$email","_data$user","_data$user2","admin","role","login","password","post","_data$user3","Error","message","logout","AuthContext","AuthProvider","children","_s2","auth","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s3","$RefreshReg$"],"sources":["D:/Uknord5he/BH3/dev/diplomas/frontend/src/hooks/useAuth.js"],"sourcesContent":["import React, {\r\n    createContext,\r\n    useCallback,\r\n    useContext,\r\n    useEffect,\r\n    useState,\r\n} from 'react';\r\nimport api from '../services/api';\r\n\r\n/**\r\n * Ожидаемые эндпоинты БЭКа (как в изначальной версии):\r\n *   GET  /api/me       -> { email, isAdmin? }   (может вернуться 304)\r\n *   POST /api/login    -> { email, isAdmin? }\r\n *   POST /api/logout   -> { ok: true }\r\n */\r\nconst EP_ME     = '/me';\r\nconst EP_LOGIN  = '/login';\r\nconst EP_LOGOUT = '/logout';\r\n\r\nconst STORAGE_KEY = 'auth/state/v1';\r\n\r\nfunction useAuthState() {\r\n    const [user, setUser] = useState(() => {\r\n        try { return JSON.parse(localStorage.getItem(STORAGE_KEY) || 'null'); }\r\n        catch { return null; }\r\n    });\r\n\r\n    const persist = (u) => {\r\n        setUser(u);\r\n        try {\r\n            if (u) localStorage.setItem(STORAGE_KEY, JSON.stringify(u));\r\n            else localStorage.removeItem(STORAGE_KEY);\r\n        } catch {}\r\n    };\r\n\r\n    // Авторизован — только если есть email или флаг админа\r\n    const isAuthed = !!(user && (user.email || user.isAdmin));\r\n    const isAdmin  = !!user?.isAdmin;\r\n\r\n    /**\r\n     * Валидируем текущую сессию.\r\n     * - 2xx: берём email/isAdmin из тела (если есть).\r\n     * - 304: НЕ меняем state (оставляем как есть) — это устраняет «мигание».\r\n     * - 401/403: считаем гостем.\r\n     * - прочие коды: state не трогаем (чтобы не дёргать UI).\r\n     */\r\n    const refresh = useCallback(async () => {\r\n        try {\r\n            const res = await api.get(EP_ME, { validateStatus: () => true });\r\n            const { status, data } = res;\r\n\r\n            if (status >= 200 && status < 300) {\r\n                const email =\r\n                    data?.email ??\r\n                    data?.user?.email ??\r\n                    null;\r\n                const admin =\r\n                    !!(data?.isAdmin || data?.role === 'admin' || data?.user?.role === 'admin');\r\n\r\n                if (email || admin) persist({ email, isAdmin: admin });\r\n                // если сервер ответил 200, но без полезных данных — state не трогаем\r\n                return;\r\n            }\r\n\r\n            if (status === 304) {\r\n                // оставляем, как есть — никаких дерганий UI\r\n                return;\r\n            }\r\n\r\n            if (status === 401 || status === 403) {\r\n                persist(null);\r\n                return;\r\n            }\r\n\r\n            // 404/500 и т.п. — молча игнорируем (state оставляем)\r\n        } catch {\r\n            // сеть/ошибка — ничего не меняем\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => { refresh(); }, [refresh]);\r\n\r\n    /**\r\n     * Нормальный логин: только /login.\r\n     * Сразу записываем пользователя по ответу, не полагаясь на /me.\r\n     */\r\n    const login = async ({ email, password }) => {\r\n        const res = await api.post(EP_LOGIN, { email, password }, { validateStatus: () => true });\r\n        const { status, data } = res;\r\n\r\n        if (status >= 200 && status < 300) {\r\n            const admin =\r\n                !!(data?.isAdmin || data?.role === 'admin' || data?.user?.role === 'admin');\r\n            persist({ email: data?.email || email, isAdmin: admin });\r\n            return;\r\n        }\r\n        if (status === 401 || status === 403) {\r\n            throw new Error(data?.message || 'Невірний логін або пароль');\r\n        }\r\n        throw new Error(data?.message || 'Помилка авторизації');\r\n    };\r\n\r\n    const logout = async () => {\r\n        try { await api.post(EP_LOGOUT, null, { validateStatus: () => true }); }\r\n        catch {}\r\n        persist(null);\r\n    };\r\n\r\n    return { user, isAuthed, isAdmin, refresh, login, logout };\r\n}\r\n\r\n/* === Контекст/провайдер/хук === */\r\nconst AuthContext = createContext({\r\n    user: null,\r\n    isAuthed: false,\r\n    isAdmin: false,\r\n    refresh: async () => {},\r\n    login: async () => {},\r\n    logout: async () => {},\r\n});\r\n\r\nexport function AuthProvider({ children }) {\r\n    const auth = useAuthState();\r\n    return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\r\n}\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport default useAuth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}